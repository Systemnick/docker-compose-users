user nginx;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    log_format json_combined escape=json
        '{'
          '"timestamp": "$time_iso8601",'
          '"msec": $msec,'
          '"remote_addr": "$remote_addr",'
          '"http_host": "$http_host",'
          '"server_name": "$server_name",'
          '"server_addr": "$server_addr",'
          '"server_port": $server_port,'
          '"pipe": "$pipe",'
          '"connection": $connection,'
          '"connection_requests": $connection_requests,'
          '"upstream_addr": "$upstream_addr",'
          '"upstream_cache_status": "$upstream_cache_status",'
          '"upstream_response_time": "$upstream_response_time", '
          '"request": "$request",'
          '"request_method": "$request_method",'
          '"uri": "$uri",'
          '"server_protocol": "$server_protocol",'
          '"host": "$host",'
          '"remote_user": "$remote_user",'
          '"http_referrer": "$http_referer",'
          '"http_user_agent": "$http_user_agent",'
          '"http_x_forwarded_for": "$http_x_forwarded_for",'
          '"http_x_forwarded_proto": "$http_x_forwarded_proto", '
          '"http_x_request_id": "$http_x_request_id",'
          '"request_id": "$request_id",'
          '"request_body": "$request_body",'
          '"request_length": $request_length,'
          '"request_time": $request_time,'
          '"status": $status,'
          '"bytes_sent": $bytes_sent,'
          '"body_bytes_sent": $body_bytes_sent'
        '}';

    access_log  /var/log/nginx/access.log  json_combined;
    error_log   /var/log/nginx/error.log  crit;

    sendfile            off;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    server_tokens off;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    gzip on;
    gzip_min_length 256;
    gzip_comp_level  3;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    real_ip_header X-Forwarded-For;
    set_real_ip_from 0.0.0.0/0;

    add_header X-Request-ID $request_id;

    server {
        listen 80 default_server;
        server_name _;
        return 200;
    }

    # Status check
    server {
        listen 90;
        server_name _;
        location /nginx_status {
            stub_status on;
            access_log  off;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}
